<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BarraMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAjuda.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>